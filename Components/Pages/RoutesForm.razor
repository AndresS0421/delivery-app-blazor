@page "/routes/new"
@page "/routes/edit/{Id:int}"
@using _3Parcial.Models;
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioRoutes _repositorio;
@inject IRepositorioLocations _repositorio_locations;

<PageTitle>Routes</PageTitle>

<h1>@_mensaje Ruta</h1>

<EditForm Model="_route" FormName="frmLocation" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    @if (_locations != null)
    {
        <div class="my-3">
            <label for="type">Origen</label>
            <InputSelect class="form-select" @bind-Value="_route.Origin">
                <option>Seleccionar...</option>
                @foreach (Location location in _locations)
                {
                    <option value="@location.Id">@location.Street @location.ExtNumber, @location.Neighborhood. @location.ZipCode</option>
                }
            </InputSelect>
        </div>

        <div class="my-3">
            <label for="type">Destino</label>
            <InputSelect class="form-select" @bind-Value="_route.Destination">
                <option>Seleccionar...</option>
                @foreach (Location location in _locations)
                {
                    <option value="@location.Id">@location.Street @location.ExtNumber, @location.Neighborhood. @location.ZipCode</option>
                }
            </InputSelect>
        </div>
        <div class="my-3">
            <label for="type">Vehículos</label>
            <InputSelect class="form-select" @bind-Value="_route.Destination">
                <option>Seleccionar...</option>
                @foreach (Location location in _locations)
                {
                    <option value="@location.Id">@location.Street @location.ExtNumber, @location.Neighborhood. @location.ZipCode</option>
                }
            </InputSelect>
        </div>
    }
    <div class="row mb-3">
        <label for="numDistance" class="col-2 col-form-label">Distancia</label>
        <div>
            <InputNumber id="numDistance" class="form-control" @bind-Value="_route.Distance" />
            <ValidationMessage For="()=>_route.Distance" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="numDuration" class="col-2 col-form-label">Duración estimada (minutos)</label>
        <div>
            <InputNumber id="numDuration" class="form-control" @bind-Value="_route.EstimatedDuration" />
            <ValidationMessage For="()=>_route.EstimatedDuration" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtStartAt" class="col-2 col-form-label">Inicia</label>
        <div>
            <InputDate Type="InputDateType.Time" id="txtStartAt" class="form-control" @bind-Value="_route.StartAt" />
            <ValidationMessage For="()=>_route.StartAt" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtEndAt" class="col-2 col-form-label">Finaliza</label>
        <div>
            <InputDate Type="InputDateType.Time" id="txtEndAt" class="form-control" @bind-Value="_route.EndAt" />
            <ValidationMessage For="()=>_route.EndAt" />
        </div>
    </div>

    <div class="row gx-2">
        <button type="submit" class="col btn btn-primary">Guardar</button>
        <button class="col btn btn-danger" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private DeliveryRoute _route = new();
    private List<Location>? _locations;

    protected override async Task OnInitializedAsync()
    {
        _locations = await _repositorio_locations.GetAll();

        if (Id > 0)
        {
            _route = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (Id > 0)
        {
            await _repositorio.Update(Id, _route);
        }
        else
        {
            await _repositorio.Add(_route);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/routes");
    }
}
